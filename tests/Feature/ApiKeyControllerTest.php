<?php
namespace Tests\Feature;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Http\Response;
use Tests\TestCase;

class ApiKeyControllerTest extends TestCase
{
    use RefreshDatabase, WithFaker;
    protected string $apiKey;
    protected function setUp(): void
    {
        $this->apiKey = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiI0IiwianRpIjoiNzI0ZGIzYzYzYjkxZjNjOTRlMjM0YTBmNDAzZjE3NDllZTUxMmU0ODFhMzY2OGY2MTdkZTE2MmViMjMzYzgzNDRmYWJhZjZhMmFhNTBjZjUiLCJpYXQiOjE2ODA2ODI1MzguODc0NDEyLCJuYmYiOjE2ODA2ODI1MzguODc0NDE0LCJleHAiOjQ4MzYzNTYxMzguODY5MDM1LCJzdWIiOiI0MTk5ODgiLCJzY29wZXMiOltdfQ.GsV_JhfJs_OA8aqRGKOzwaq6mvZ-q7-rTxVGwirh1ESEPEX9HwB7uDMJiZH6WGinG8p95UlSH_G1RMc9Ufjt9ae2NeqmTAixLDSfO1wmBRqAekLk5mO6IIwpkWABxjA4G1ZE2yC1mZThY0OfGddtpmFqYdMRjrLJOibCR0ENM7JqKlD-3BTJrJ2Rkc-KPttQiTAqhiNb0h99gIFvk7bIEGu_ZEJNJ9ytI2BVJgjBU3_u9ctGTQTY_PgL4frC0QcxmNBiuIu5RVjlz6cCd40p9Ji8CEokb0Z6VUWBY4QoHkfIx_mXQHLZvXRopBMLa-JGXhOSKIA5sHEIiykshxupaGMw4hpnBsEplvflr5LWy_KQUKh9AmNJk9pUhPg_wlxx7dia3dMcGXFojJTK5Nn_sPPV4pMf98caRuj9g-xpmz3Q-qeYwzwpuyjZyBRf_HYNNrzF0f2_weIFrOXl3rjXA1wNn-YJR8LvvEZfybsEEtADs_WN7_cFNRuO8PZDu8R16g5Qgdra6WlSzQBuSDfU_g39oSAMjMMiOVkQqFaGoN0wTlKkoU5F7-bNWc_7tzFo5oalVyfQ_O59_AkHozhpNVSD9xMyJ_EQZ8sDULAOrEBQahJVCHMNd5sEFJ1ZMzIoBwceR_5OvkkpFhGMhLToamo2e-L5SiMzaIpeh3hJD-w';

        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /** @test */
    public function it_can_validate_and_save_an_api_key()
    {
         $response = $this->post(
            route('api-key.validate'), ['api_key' => $this->apiKey]
        );

        // Assert
        $response->assertStatus(Response::HTTP_OK);
        $this->assertDatabaseHas('api_keys', ['api_key' => $this->apiKey]);
    }

    /** @test */
    public function it_can_load_an_api_key_from_database()
    {
        $response = $this->get(route('api-key.load'));

        // Assert
        $response->assertStatus(Response::HTTP_OK);
    }
}
